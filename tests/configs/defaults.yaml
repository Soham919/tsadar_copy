parameters:
    amp1:
        val: 1.
        active: False
        lb: 0.
        ub: 10.
    amp2:
        val: 1.
        active: False
        lb: 0.
        ub: 10.
    amp3:
        val: 1.
        active: False
        lb: 0.
        ub: 10.
    lam:
        val: 526.5
        active: False
        lb: 523.
        ub: 528.
    Te:
        val: .5
        active: False
        lb: 0.01
        ub: 3.
        gradient: 0.0
    Ti:
        val: .2
        active: False
        lb: 0.01
        ub: 3.
    Z:
        val: 1.
        active: False
        lb: 1.
        ub: 25.
    A:
        val: 40
        active: False
    fract:
        val: 1
        active: False
    ne:
        val: .2
        active: False
        lb: .001
        ub: 10.
        gradient: 0.0
    ud:
        val: 0
        active: False
    Va:
        val: 0
        active: False
    m:
        val: 2.
        active: False
        lb: 2.
        ub: 5.
    fe:
        val: []
        active: False
        length: 3999
        type:
            DLM:
        lb: -100.
        ub: -0.5
        fe_decrease_strict: True
    blur:
        val: []
        active: False
        lb: 0.
        ub: 10.
    specCurvature:
        val: []
        active: False
        lb: .1
        ub: 10.
    fitprops:
        val: []
        active: False

other:
    crop_window: 256
    active: False
    BinWidth: 10
    NumBinInRng: 0
    TotalNumBin: 1023
    expandedions: False
    extraoptions:
        spectype: 2
        load_ion_spec: False
        load_ele_spec: True
        fit_IAW: False
        fit_EPWb: True
        fit_EPWr: True
    PhysParams:
        background: [0, 0]
        norm: 0
    iawoff: 0
    iawfilter: [1, 4, 24, 528]

data:
    shotnum: 101675
    background_shot:
        type: None
        val: None
    bgscale: 1
    dpixel: 2
    lineouts:
        type:
            pixel
        start: 500
        end: 502
        skip: 1
    background:
        type:
            pixel
        slice: 900


    
optimizer:
    # use adam for nn / stochastic gradient descent
    # use L-BFGS-B for full batch / parameter learning
    # although adam will work here too
    method: adam
    hessian: False
    y_norm: False
    x_norm: True
    grad_method: AD
    batch_size: 4
    num_epochs: 300
    learning_rate: 5.0e-3

nn:
    use: False
    conv_filters: 64|32|32 # 64|64|32|32|32
    linear_widths: 32|16


mlflow:
    experiment: inverse-thomson-scattering
